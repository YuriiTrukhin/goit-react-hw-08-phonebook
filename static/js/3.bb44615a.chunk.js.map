{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Alert/Alert.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","redux/contacts/contactsOperation.js","components/Alert/Alert.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","views/ContactsView.js"],"names":["module","exports","axios","defaults","baseURL","addContact","name","number","dispatch","contactsActions","addContactRequest","post","then","response","addContactSuccess","data","catch","error","addContactError","fetchContacts","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","removeContact","id","removeContactsRequest","delete","removeContactsSuccess","removeContactsError","Alert","contactAdded","CSSTransition","in","timeout","classNames","styles","unmountOnExit","className","alertBox","state","contacts","filter","items","contact","toLowerCase","includes","ContactForm","handleChange","target","setState","value","handleSubmit","event","preventDefault","console","log","props","list","some","setTimeout","this","form","action","onSubmit","label","htmlFor","required","input","type","placeholder","onChange","inputBtn","Component","mapDispatchToProps","newContact","connect","selectors","ContactList","TransitionGroup","component","map","el","listItem","btn","onClick","toDelete","contactsOperation","filterRender","box","e","ContactsView","isAuthenticated","onFetchContacts","history","replace","appear","title","authSelectors"],"mappings":"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","file":"static/js/3.bb44615a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2DwWT\",\"label\":\"ContactForm_label__yn7jv\",\"input\":\"ContactForm_input__iHIIH\",\"inputBtn\":\"ContactForm_inputBtn__1r7FQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBox\":\"Alert_alertBox__1nHBc\",\"enter\":\"Alert_enter__aYL_-\",\"enterActive\":\"Alert_enterActive__KCWbR\",\"alertExit\":\"Alert_alertExit__2GO8W\",\"exitActive\":\"Alert_exitActive__1QMWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1w4vH\",\"btn\":\"ContactList_btn__1LR8T\",\"listItem\":\"ContactList_listItem__2WZ-2\",\"enter\":\"ContactList_enter__3NvzV\",\"enterActive\":\"ContactList_enterActive__Ywj69\",\"exit\":\"ContactList_exit__3wC8G\",\"exitActive\":\"ContactList_exitActive__2sPi7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__3OwH1\",\"input\":\"Filter_input__oUd0O\",\"label\":\"Filter_label__2EAda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1qb-4\",\"title\":\"App_title__3GoTy\",\"appear\":\"App_appear__3su5B\",\"appearActive\":\"App_appearActive__1fWuf\"};","import axios from \"axios\";\r\nimport contactsActions from \"./contactsActions\";\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  dispatch(contactsActions.addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then((response) => {\r\n      dispatch(contactsActions.addContactSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => {\r\n      dispatch(contactsActions.fetchContactsSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\r\n};\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(contactsActions.removeContactsRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(contactsActions.removeContactsSuccess(id));\r\n    })\r\n    .catch((error) => dispatch(contactsActions.removeContactsError(error)));\r\n};\r\n\r\nexport default { addContact, fetchContacts, removeContact };\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"../Alert/Alert.module.css\";\r\n\r\nconst Alert = ({ contactAdded }) => {\r\n  return (\r\n    <CSSTransition in={contactAdded} timeout={250} classNames={styles} unmountOnExit>\r\n      <div className={styles.alertBox}>\r\n        <p>Contact already declared</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\nexport default Alert;\r\n","const getLoading = (state) => state.contacts.loading;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getForm = (state) => state.contacts.items;\r\nconst getContactList = (state) =>\r\n  state.contacts.items.filter((contact) => contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase()));\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getLoading, getFilter, getForm, getContactList };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\nimport newContact from \"../../redux/contacts/contactsOperation\";\r\n\r\nimport Alert from \"../Alert/Alert\";\r\nimport selectors from \"../../redux/selectors\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\", contactAdded: false };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.props.list);\r\n    const rule = this.props.list.some((contact) => contact.name === this.state.name);\r\n    if (rule) {\r\n      this.setState({ contactAdded: true });\r\n      setTimeout(() => this.setState({ contactAdded: false }), 2000);\r\n      return;\r\n    }\r\n    this.props.addContact({ ...this.state });\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, contactAdded } = this.state;\r\n    return (\r\n      <>\r\n        <Alert contactAdded={contactAdded} />\r\n\r\n        <div>\r\n          <form className={styles.form} action=\"\" onSubmit={this.handleSubmit}>\r\n            <label className={styles.label} htmlFor=\"name\">\r\n              {\" \"}\r\n              Name\r\n              <input\r\n                required\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label className={styles.label} htmlFor=\"number\">\r\n              {\" \"}\r\n              Number\r\n              <input\r\n                required\r\n                className={styles.input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                placeholder=\"number\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <input className={styles.inputBtn} type=\"submit\" value=\"Add contuct\" />\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: selectors.getForm(state),\r\n});\r\nconst mapDispatchToProps = { addContact: newContact.addContact };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport contactsOperation from \"../../redux/contacts/contactsOperation\";\nimport selectors from \"../../redux/selectors\";\n\nclass ContactList extends Component {\n  render() {\n    return (\n      <>\n        <TransitionGroup component=\"ul\" className={styles.list}>\n          {this.props.list.map((el) => {\n            return (\n              <CSSTransition key={el.id} classNames={styles} timeout={250}>\n                <li key={el.id} className={styles.listItem}>\n                  {el.name} : {el.number}\n                  <button className={styles.btn} type=\"button\" onClick={() => this.props.toDelete(el.id)}>\n                    Удалить\n                  </button>\n                </li>\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n      </>\n    );\n  }\n}\nContactList.propTypes = {\n  toDelete: PropTypes.func.isRequired,\n  list: PropTypes.array.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  list: selectors.getContactList(state),\n});\nconst mapDispatchToProps = { toDelete: contactsOperation.removeContact };\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport selectors from \"../../redux/selectors\";\n\nconst Filter = ({ filterRender, filter }) => (\n  <div className={styles.box}>\n    <label className={styles.label}>Find contacts by name</label>\n    <input className={styles.input} type=\"text\" value={filter} onChange={(e) => filterRender(e.target.value)} />\n  </div>\n);\n\nFilter.propTypes = {\n  filterRender: PropTypes.func.isRequired,\n  filter: PropTypes.string,\n};\nconst mapStateToProps = (state, props) => ({\n  filter: selectors.getFilter(state),\n});\nconst mapDispatchToProps = { filterRender: contactsActions.filterRender };\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"../components/ContactForm/ContactForm\";\r\nimport ContactList from \"../components/ContactList/ContactList\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"../App.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/authSelectors\";\r\nimport contactsOperation from \"../redux/contacts/contactsOperation\";\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    if (!this.props.isAuthenticated) {\r\n      this.props.history.replace(\"/\");\r\n      return;\r\n    }\r\n    this.props.onFetchContacts();\r\n  }\r\n  componentDidUpdate() {\r\n    if (!this.props.isAuthenticated) {\r\n      this.props.history.replace(\"/\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CSSTransition in={true} appear={true} timeout={5000} classNames={styles}>\r\n          <h1 className={styles.title}>Phonebook</h1>\r\n        </CSSTransition>\r\n        <ContactForm />\r\n        <h2 className={styles.title}>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperation.fetchContacts,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n"],"sourceRoot":""}