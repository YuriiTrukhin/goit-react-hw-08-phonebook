{"version":3,"sources":["redux/contacts/contactsActions.js","routes.js","redux/auth/authSelectors.js","redux/auth/authOperations.js","redux/auth/authActions.js","components/UserMenu/UserMenu.js","components/Loading/Loading.js","App.js","reportWebVitals.js","redux/contacts/contactsReducer.js","redux/auth/authReducer.js","redux/store.js","index.js"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","filterRender","HomeView","LoginView","RegisterView","ContactsView","isAuthenticated","state","auth","token","getUserName","user","name","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","logOut","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","styles","container","display","alignItems","avatar","marginRight","fontWeight","connect","authSelectors","onLogout","authOperations","style","src","alt","width","type","onClick","App","color","height","timeout","React","Component","AsyncHomeView","lazy","AsyncLoginView","AsyncRegisterView","AsyncContactsView","this","props","onGetCurrentUser","fallback","exact","path","routes","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","items","createReducer","contactsActions","action","payload","_","filter","contact","id","loading","combineReducers","initialUserState","email","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc2dbb47.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contacts/addRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactError = createAction(\"contacts/addError\");\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchError\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeError\");\r\n\r\nconst filterRender = createAction(\"contacts/filterRender\");\r\n\r\nexport default {\r\n  addContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  filterRender,\r\n};\r\n","export default {\r\n  HomeView: \"/\",\r\n  LoginView: \"/login\",\r\n  RegisterView: \"/register\",\r\n  ContactsView: \"/contacts\",\r\n};\r\n","const isAuthenticated = (state) => state.auth.token;\r\n\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nexport default { isAuthenticated, getUserName };\r\n","import axios from \"axios\";\r\nimport authActions from \"./authActions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post(\"/users/signup\", credentials)\r\n    .then((response) => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst logIn = (credentials) => (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post(\"/users/login\", credentials)\r\n    .then((response) => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get(\"/users/current\")\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch((error) => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logOut = () => (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post(\"/users/logout\")\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch((error) => dispatch(authActions.logoutError(error)));\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../../redux/auth/authSelectors\";\r\nimport authOperations from \"../../redux/auth/authOperations\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar:\r\n    \"https://static.vecteezy.com/system/resources/previews/000/611/223/non_2x/vector-funny-dog-logo-design-concept-template.jpg\",\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(UserMenu);\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nexport default class App extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","// import ContactForm from \"../src/components/ContactForm/ContactForm\";\n// import ContactList from \"../src/components/ContactList/ContactList\";\n// import Filter from \"../src/components/Filter/Filter\";\n// import { CSSTransition } from \"react-transition-group\";\nimport React, { lazy, Suspense, Component } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n// import styles from \"./App.module.css\";\nimport { connect } from \"react-redux\";\nimport routes from \"./routes\";\nimport authSelectors from \"./redux/auth/authSelectors\";\nimport UserMenu from \"./components/UserMenu/UserMenu\";\nimport authOperations from \"./redux/auth/authOperations\";\nimport Loading from \"./components/Loading/Loading\";\n\n// import React, { Component } from \"react\";\n\nconst AsyncHomeView = lazy(() => import(\"./views/HomeView\"));\nconst AsyncLoginView = lazy(() => import(\"./views/LoginView\"));\nconst AsyncRegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst AsyncContactsView = lazy(() => import(\"./views/ContactsView\"));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <BrowserRouter>\n          <Suspense\n            fallback={\n              <Loading />\n              // {this.props.isLoadingContacts && <h1>LOADING STUFF ...</h1>}</div>\n            }\n          >\n            {this.props.isAuthenticated && <UserMenu />}\n            <Switch>\n              <Route exact path={routes.HomeView} component={AsyncHomeView} />\n              <Route exact path={routes.LoginView} component={AsyncLoginView} />\n              <Route path={routes.RegisterView} component={AsyncRegisterView} />\n              <Route path={routes.ContactsView} component={AsyncContactsView} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </Suspense>\n        </BrowserRouter>\n      </>\n    );\n  }\n}\n// const mapStateToProps = (state) => ({\n//   isLoadingContacts: selectors.getLoading(state),\n// });\n// const mapDispatchToProps = {\n//   onFetchComponents: contactsOperation.fetchContacts,\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n// export default App;\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, {\n  onGetCurrentUser: authOperations.getCurrentUser,\n})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport contactsActions from \"./contactsActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst INITIAL_STATE = {\r\n  contacts: [],\r\n  filter: \"\",\r\n};\r\n\r\nconst newContact = (state, action) => [...state, action.payload];\r\nconst removeContact = (state, action) => state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst items = createReducer(INITIAL_STATE.contacts, {\r\n  [contactsActions.addContactSuccess]: newContact,\r\n  [contactsActions.fetchContactsSuccess]: (_, action) => action.payload,\r\n  [contactsActions.removeContactsSuccess]: removeContact,\r\n});\r\n\r\nconst filter = createReducer(INITIAL_STATE.filter, {\r\n  [contactsActions.filterRender]: (state, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading });\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./authActions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactReducer from \"./contacts/contactsReducer\";\r\nimport authReducer from \"./auth/authReducer\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}